[{"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\index.js":"1","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Routes.js":"2","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\reportWebVitals.js":"3","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\App.js":"4","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\SinglePost.js":"5","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\UpdatePost.js":"6","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Login.js":"7","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Create.js":"8","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\PrivateRoute.js":"9","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Nav.js":"10","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\helpers.js":"11"},{"size":511,"mtime":1652033722136,"results":"12","hashOfConfig":"13"},{"size":770,"mtime":1652034964051,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2722,"mtime":1651366773747,"results":"16","hashOfConfig":"13"},{"size":1065,"mtime":1610397112144,"results":"17","hashOfConfig":"13"},{"size":3216,"mtime":1651967051842,"results":"18","hashOfConfig":"13"},{"size":2242,"mtime":1651420861826,"results":"19","hashOfConfig":"13"},{"size":2864,"mtime":1610402621905,"results":"20","hashOfConfig":"13"},{"size":440,"mtime":1652022614684,"results":"21","hashOfConfig":"13"},{"size":825,"mtime":1610388461429,"results":"22","hashOfConfig":"13"},{"size":1105,"mtime":1610386894273,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6mmwon",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\index.js",[],["51","52"],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Routes.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\reportWebVitals.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\App.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\SinglePost.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from './Nav';\r\nimport renderHTML from 'react-render-html';\r\n\r\nconst SinglePost = props => {\r\n  const [post, setPost] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\r\n      .then(response => setPost(response.data))\r\n      .catch(error => alert('Error loading single post'));\r\n  }, []);\r\n\r\n  const showSinglePost = () => (\r\n    <div className=\"row\">\r\n      <div className=\"col-mid-8 pt-3 pb-2\">\r\n        <h1>{post.title}</h1>\r\n        <div className=\"lead pt-3\">{renderHTML(post.content)}</div>\r\n        <p>\r\n          Author: <strong>{post.user}</strong> <span>&nbsp;</span> \r\n          Published on:<span>&nbsp;</span>\r\n          <strong>{new Date(post.createdAt).toLocaleString()}</strong>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container pb-5\">\r\n      <Nav />\r\n      {post && showSinglePost()}\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\n\r\nexport default SinglePost;","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\UpdatePost.js",["54"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Nav from './Nav';\r\nimport ReactQuill from 'react-quill';\r\nimport {getToken} from './helpers';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\nconst UpdatePost = props => {\r\n  const [state, setState] = useState({\r\n    title: '',\r\n    slug: '',\r\n    user: ''\r\n  })\r\n\r\n  const {title, slug, user} = state;\r\n\r\n  const [content, setContent] = useState('');\r\n\r\n  // Rich Text Editor handle change\r\n  const handleContent = event => {\r\n    console.log(event);\r\n    setContent(event);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\r\n      .then(response => {\r\n        const {title, content, slug, user} = response.data;\r\n        setState({...state, title, slug, user});\r\n        setContent(content);\r\n      })\r\n      .catch(error => alert('Error loading single post'));\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // console.log('name', name, 'event', event, event.target.value);\r\n    setState({...state, [name]: event.target.value});\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    // console.table({ title, content, user });\r\n    axios\r\n      .put(`${process.env.REACT_APP_API}/post/${slug}`, \r\n      { title, content, user }, \r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${getToken()}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response);\r\n        const {title, content, slug, user} = response.data;\r\n        // empty state\r\n        setState({ ...state, title, content, slug, user});\r\n        // show success alert\r\n        alert(`Post titled ${title} is updated`);\r\n        // response.redirect('/');\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n        alert(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  const showUpdateForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Title</label>\r\n        <input \r\n          onChange={handleChange('title')} \r\n          value={title} \r\n          type=\"text\" \r\n          className=\"form-control\" \r\n          placeholder=\"Post title\" \r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Content</label>\r\n        <ReactQuill\r\n          onChange={handleContent}\r\n          value={content}\r\n          theme=\"bubble\"\r\n          className=\"pb-5 mb-3\"\r\n          placeholder=\"Write something..\"\r\n          style={{ border: '1px solid #666' }}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">User</label>\r\n        <input \r\n        onChange={handleChange('user')} \r\n        value={user} type=\"text\" \r\n        className=\"form-control\" \r\n        placeholder=\"Your name\" \r\n        required\r\n      />\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-primary mt-3\">Update</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  return (\r\n    <div className=\"container pb-5\">\r\n      <Nav />\r\n      <br />\r\n      <h1>UPDATE POST</h1>\r\n      {showUpdateForm()}\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default UpdatePost;","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Login.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Nav from './Nav';\r\nimport { authenticate, getUser } from './helpers';\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  // Create a state\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    password: ''\r\n  });\r\n\r\n  const {name, password} = state; // Destructure values from state\r\n\r\n  useEffect(() => {\r\n    getUser() && props.history.push('/');\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // console.log('name', name, 'event', event, event.target.value);\r\n    setState({...state, [name]: event.target.value});\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    // console.table({ title, content, user });\r\n    axios\r\n      .post(`${process.env.REACT_APP_API}/login`, { name, password })\r\n      .then(response => {\r\n        console.log(response);\r\n        // Response will contain token and name of user\r\n        authenticate(response, () => props.history.push('/create'));\r\n        // Redirect to create page\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n        alert(error.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container pb-5\">\r\n      <Nav/>\r\n      <br />\r\n      <h1>LOGIN</h1>\r\n      <br />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label className=\"text-muted\">Name</label>\r\n          <input \r\n            onChange={handleChange('name')} \r\n            value={name} \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"Your Name\" \r\n            required\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className=\"form-group\">\r\n          <label className=\"text-muted\">Password</label>\r\n          <input \r\n          onChange={handleChange('password')} \r\n          value={password} type=\"password\" \r\n          className=\"form-control\" \r\n          placeholder=\"Your Password\" \r\n          required\r\n        />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary mt-3\">Login</button>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Create.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\PrivateRoute.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\Nav.js",[],"C:\\Users\\krzys\\Desktop\\projects\\mernCRUD-REST\\mern-crud\\client\\src\\helpers.js",[],["56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":14,"column":6,"nodeType":"64","endLine":14,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":34,"column":6,"nodeType":"64","endLine":34,"endColumn":8,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":20,"column":6,"nodeType":"64","endLine":20,"endColumn":8,"suggestions":"69"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.slug'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has missing dependencies: 'props.match.params.slug' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["75"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["76"],["72"],["73"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [props.match.params.slug]",{"range":"83","text":"84"},"Update the dependencies array to be: [props.match.params.slug, state]",{"range":"85","text":"86"},"Update the dependencies array to be: [props.history]",{"range":"87","text":"88"},[450,452],"[props.match.params.slug]",[924,926],"[props.match.params.slug, state]",[483,485],"[props.history]"]